---
title: Fundamentos de Comunicaciones Inalámbricas - TP N°1
subtitle: Fundamentos de Comunicaciones Inalámbricas
author: Matías Roqueta
institute: Instituto Balseiro
lang: es
bibliography: inalambricas.bib
biblio-style: ieee
format: 
  pdf:
    fontfamily: libertinus
    pdf-engine: lualatex
    include-in-header: headers.tex
    include-before-body: tikzsetup.tex
    cite-method: biblatex
    classoption: twocolumn
    geometry:
      - top=20mm
      - bottom=20mm
      - left=12mm
      - right=12mm
    highlight-style: arrow
    latex-auto-install: true
jupyter: julia-1.7 
execute:
  freeze: true 
---
```{julia}
#| echo: false
#| output: false
using Statistics
using FFTW  
using Plots
pyplot()

δ(t´)=[abs(i)==minimum(abs.(t´)) ? 1 : 0 for i in t´]
c = 3e8
```
## Introducción

Evaluamos un modelo de canal inalámbrico de dos caminos, definido como un sistema lineal variante en el tiempo caracterizado por su respuesta al impulso
$$
  h(\tau, t) = \sum_{i=1}^2 a_i(t)\,\delta\left(\tau - \tau_i(t)\right) 
$$ {#eq-h}
Su respuesta en frecuencia se consigue con la transformada de Fourier respecto a la variable $\tau$
$$
  H(f, t) = \sum_{i=1}^2 a_i(t)\,e^{-2\pi f \tau_i(t)}
$$ {#eq-H}

Estudiamos el caso particular de canal inalámbrico variante en el tiempo presentado en la @fig-canal

![Canal inalámbrico de 2 caminos conformado por una antena emisora Tx estática, antena receptora Rx móvil con velocidad constante, y un reflector.](Images/Fig1.tex){#fig-canal}

Este canal es desarrollado en @tse_2 y resulta en
$$
a_1(t)=\frac{|\alpha|}{x_1(t)} \qquad a_2(t)=-\frac{|\alpha|}{x_2(t)}
$$ {#eq-a1}
$$
\tau_1(t)=\frac{x_1(t)}{c} \qquad \tau_2(t)=\frac{x_2(t)}{c}
$$ {#eq-a2}
En donde $x_1(t)$ y $x_2(t)$ son la distancia de cada camino, y el signo de $a_2$ contempla el salto de fase por reflexión
$$
  x_1(t) = r_0+vt \qquad x_2(t)=2d-r_0-vt
$$ {#eq-xi}

Para estudiar la interferencia resulta necesario expresar la diferencia de fase entre los dos caminos. La expresión resultará en interferencia constructiva cuando $\Delta\theta$ es un múltiplo par de $\pi$, y en interferencia destructiva cuando este es un múltiplo impar de $\pi$
$$
  \Delta\theta = 2\pi f \tau_2(t)+\pi-2\pi f \tau_1(t)
$$ {#eq-fase}
Desarrollando la expresión para el canal de la @fig-canal se llega al resultado
$$
  \Delta\theta = \frac{4\pi}{c} f \left(d-r\right)+\pi
$$ {#eq-fase2}

Vista la @eq-fase2 como función de $r$, se define la _longitud de coherencia_ $X_C$ como la distancia entre un máximo y un mínimo de interferencia.

Asimismo, vista como función de $f$, se define el _ancho de banda de coherencia_ $W_C$ de la misma forma.

## Implementación

Implementamos la función genérica para un canal de dos caminos en el dominio del tiempo, @eq-h
```{julia}
#| output: false
h(t´,t) = ai[1](t).*δ(t´.-ti[1](t)).+
          ai[2](t).*δ(t´.-ti[2](t))
```
Así como en el dominio de la frecuencia, @eq-H
```{julia}
#| output: false
H(f,t) = ai[1](t)*exp(-im*2pi*f*ti[1](t))+ 
         ai[2](t)*exp(-im*2pi*f*ti[2](t))
```

Para simular el caso particular descrito en la @fig-canal, especificamos las expresiones de $a_i$ y $\tau_i$ de @eq-a1 y @eq-a2 como vectores de funciones
```{julia} 
#| output: false
ai = [t -> 1/xi[1](t), t -> -1/xi[2](t)]
ti = [t -> xi[1](t)/c, t ->  xi[2](t)/c]
```
Igualmente definimos los $x_i$ descritos en la @eq-xi
```{julia}
#| output: false
r(t) = r0+v*t
xi   = [t -> r(t), t -> 2*d-r(t)]
```
## Simulación

Vamos a simular la respuesta del canal en un ancho de banda de 10 MHz respecto a una frecuencia central $f_0$ de 1 GHz, discretizado en 2048 puntos.

```{julia}
#| output: false
f0 = 1e9; BW = 10e6; N = 2048
f  = f0.+range(-BW/2, BW/2, N)
dt = 1/(f[2]-f[1])
t´ = fftfreq(N, dt) |> fftshift
```

Se fija una distancia de la emisora al reflector de 1 km, y una posición inicial de la receptora de de 200 m. Se estudian posiciones de la antena receptora desde $r=r_0$ hasta $r=d-r_0$, tal como indica la @fig-rango.

![Intervalo de simulación del canal, se evalúan posiciones de la receptora $r(t) \in [r_0,\, d-r_0]$.](Images/Fig2.tex){#fig-rango}

Se considera una velocidad de la receptora de 60 km/h y se eligen tiempos $t$ tal que las posiciones de la receptora estén en el intervalo de evaluación. 
```{julia}
#| output: false
d = 1000; r0 = 200; v = 60*1000/3600
t = range(0, d-2r0, N)./v
```

Ya que $H(f,t)$ es una función de 2 dimensiones existen dos formas de realizar la simulación, que requieren fijar uno de los parámetros.

::: {#fig-analisis layout="[[1, 1]]" layout-valign="top"}
![Función $H(f, t_i)$ variando $t_i$.](Images/Fig3.tex){#fig-varf}

![Función $H(f_i, t)$ variando $f_i$.](Images/Fig4.tex){#fig-vart}

Distintas formas de simular e interpretar $H(f, t)$, visualizadas en el plano tiempo-frecuencia.
:::

Fijar $t_i$ retorna una respuesta en frecuencia del canal intsantántea $H(f, t_i)$, mientras que fijar $f_i$ retorna la evolución temporal de la transferencia del canal en esa frecuencia.

Mientras que $H(f,t)$ es la expresión general de un canal LTV, en la @fig-canal la distancia $r(t)$ caracteriza la respuesta del canal. Los resultados se presentan en función de la distancia.

## Resultados

Al realizar la simulación correspondiente a la @fig-varf, se obtienen las respuestas $H(f, r_i)$ presentadas en la @fig-respuesta. Se observa que el ancho de banda de coherencia incrementa cuando la antena receptora se acerca al reflector
```{julia}
#| echo: false
#| label: fig-respuesta
#| fig-cap: "Fila 1: r = 200m. Fila 2: r = 500m. Fila 3: r = 800m."
H_abs(f, t) = H(f, t) |> abs
t1, t2, t3 = t[1], t[end/2 |> Int], t[end]
Hmax = maximum(H_abs.(f, t1))

params =(ylims=(0, 1), xlims=(0.995, 1.005), legend=false)
p1 = plot(f.*1e-9, H_abs.(f, t1)./Hmax, ylabel="|H(f, r1)|", xformatter=(_->""); params...)
p2 = plot(f.*1e-9, H_abs.(f, t2)./Hmax, ylabel="|H(f, r2)|", xformatter=(_->""); params...)
p3 = plot(f.*1e-9, H_abs.(f, t3)./Hmax, ylabel="|H(f, r3)|", xlabel="f [GHz]"; params...)

plot(p1, p2, p3, layout=(3,1), size=(480, 320))
```
Este análisis se puede relacionar con la respuesta al impulso instantánea del canal, $h(\tau, r_i)$, presentadas en la @fig-spread.
```{julia}
#| echo: false
#| label: fig-spread
#| fig-cap: "Fila 1: r = 200m. Fila 2: r = 500m. Fila 3: r = 800m."
t1, t2, t3 = t[1], t[end/2 |> Int], t[end]
hmax = maximum(h(t´, t1))

params = (xlims=(0,8), ylims=(-0, 1), legend=false)

p1 = plot(t´.*1e6, h(t´, t1)./ hmax .|> abs, ylabel="h(τ, r1)", xformatter=(_->""); params...)
p2 = plot(t´.*1e6, h(t´, t2)./ hmax .|> abs, ylabel="h(τ, r2)", xformatter=(_->""); params...)
p3 = plot(t´.*1e6, h(t´, t3)./ hmax .|> abs, ylabel="h(τ, r3)", xlabel="τ [ms]"; params...)

plot(p1, p2, p3, layout=(3,1), size=(480, 320))
```

Si se estudia la respuesta en frecuencia para un determinado valor de $r$, se puede comparar con la diferencia de fase para observar el ancho de banda de coherencia correspondiente a esa posición. 

Para este análisis se implementa la función que calcula $\Delta\theta$ según la @eq-fase, ajustada para que retorne $\Delta\theta\in[-\pi, \pi]$.
```{julia}
#| output: false
function dif_fase(f, t)
  dif = f*(ti[2](t)-ti[1](t))
  return 2pi*mod(dif,1)-pi
end
```

```{julia}
#| echo: false
#| label: fig-Wc
#| fig-cap: "Máximo $=a_1(r)+a_2(r)$, interferencia constructiva. Mínimo $=a_1(r)-a_2(r)$, interferencia destructiva."
Hs = H.(f, t[end]) .|> abs
Hmax = (abs(ai[1](t[end]))+abs(ai[2](t[end])))/maximum(Hs)
Hmin = (abs(ai[1](t[end]))-abs(ai[2](t[end])))/maximum(Hs)
Hs = Hs/maximum(Hs)
flims = (0.998, 1.002)

p1 = plot(f.*1e-9, Hs, ylims=(0, 1.1), link=:x, label="|H(f)|", legend=:outerright, ylabel="|H(f)|")
plot!(p1, f.*1e-9, f.*0 .+Hmax, linecolor=:black, linestyle=:dot, label="Max", link=:x, xlims=flims)
plot!(p1, f.*1e-9, f.*0 .+Hmin, linecolor=:black, linestyle=:dash, label="Min", link=:x, xlims=flims, xformatter=(_->""))

p2 = plot(f.*1e-9, dif_fase.(f, t[end]), xlims=flims, xlabel="f [GHz]", link=:x, legend=false, ylabel="Δθ")
plot!(p2, [flims[1], flims[2]], [0, 0], linecolor=:black, linestyle=:dash)
plot(p1, p2, layout=(2,1), size=(480,240))
```


```{julia}
t2 = range(d-2.01r0, d-2r0, N)./v
```
```{julia}
#| echo: false
#| label: fig-respuestax
#| fig-cap: "Evolución de la respuesta del canal a determinadas frecuencias según la posición de Rx."
f1, f2, f3 = (-100e6, 0, 100e6).+1e9
Hmax = maximum(H_abs.(f1, t2))

params = (ylims=(0,1), legend=false)
p1 = plot(r.(t2), H_abs.(f1, t2)./Hmax, ylabel="|H($(round(f1*1e-9,digits=2)) GHz, r)|", xformatter=(_->""); params...)
p3 = plot(r.(t2), H_abs.(f3, t2)./Hmax, ylabel="|H($(round(f3*1e-9,digits=2)) GHz, r)|", xlabel="r [m]"; params...)

plot(p1, p3, layout=(2,1), size=(480,300))
```

```{julia}
#| echo: false
#| label: fig-Xc
#| fig-cap: "Máximo $=a_1(f_0)+a_2(f_0)$, interferencia constructiva. Mínimo $=a_1(f_0)-a_2(f_0)$, interferencia destructiva."
t2 = range(d-2.005r0, d-2r0, N)./v

Hs = H_abs.(1e9, t2)
Hmax = (ai[1].(t2).+ai[2].(t2))./maximum(Hs)
Hmin = (ai[1].(t2).-ai[2].(t2))./maximum(Hs)
Hs = Hs./maximum(Hs)

p1 = plot(r.(t2), Hs, ylims=(0,1.1), link=:x, label="|H(f)|", legend=:outerright, ylabel="|H(f)|")
plot!(p1, r.(t2), Hmax, linecolor=:black, linestyle=:dot, label="Hmax", link=:x)
plot!(p1, r.(t2), Hmin, linecolor=:black, linestyle=:dash, label="Hmax", link=:x, xformatter=(_->""))

p2 = plot(r.(t2), dif_fase.(1e9, t2), xlabel="r [m]", link=:x, legend=:false, ylabel="Δθ")
plot!(p2, [r(t2[1]), r(t2[end])], [0, 0], linecolor=:black, linestyle=:dash)

t2 = range(d-1.7r0, d-1.5r0, N)./v

plot(p1, p2, layout=(2,1), size=(480,240))
```

```{julia}
#| echo: false
#| output: false
function argmaxima(x)
  idx = []
  for i in 2:length(x)-1
    x[i-1]<x[i] && x[i]>x[i+1] && push!(idx, i)
  end
  return idx 
end
```
```{julia}
Wc(x) = c/(4*(d-x))
Xc(f) = c/(4*f)

H_abs(f,t) = H(f,t) .|> abs

T_emp(t, x) = t[argmaxima(x)] |> diff |> mean

Wc_emp = [T_emp(f, H_abs.(f, ti))/2 for ti in t]
Tc_emp = [T_emp(t2, H_abs.(fi, t2))/2 for fi in f]

p1 = plot(r.(t), Wc, xlabel="x", ylabel="Wc", legend=false)
plot!(p1, r.(t), Wc_emp, linestyle=:dash, legend=false)
p2 = plot(f, Xc, xlabel="f", ylabel="Xc", legend=false)
plot!(p2, f, Tc_emp.*v, legend=false)
plot(p1, p2, layout=(2,1))
```