---
title: Fundamentos de Comunicaciones Inalámbricas - TP N°1
subtitle: Fundamentos de Comunicaciones Inalámbricas
author: Matías Roqueta
institute: Instituto Balseiro
lang: es
bibliography: Tex/TP1.bib
biblio-style: ieee
highlight-style: arrow
format: 
  pdf:
    fontfamily: libertinus
    pdf-engine: lualatex
    include-in-header: ../Tex/headers.tex
    include-before-body: Tex/tikzsetup.tex
    cite-method: biblatex
    classoption: twocolumn
    geometry:
      - top=20mm
      - bottom=20mm
      - left=12mm
      - right=12mm
    latex-auto-install: true
jupyter: julia-1.8
---
```{julia}
#| echo: false
#| output: false
using Statistics
using FFTW  
using Plots, ColorSchemes
using LaTeXStrings
pyplot()
default(fontfamily="serif", legendfontsize=10, palette=:seaborn_deep6)

dirac(t´)=[abs(i)==minimum(abs.(t´)) ? 1 : 0 for i in t´]
c = 3e8
```
## Introducción

A continuación se presenta un análizis de un modelo de canal inalámbrico de dos caminos, definido como un sistema lineal variante en el tiempo (LTV) caracterizado por su respuesta al impulso
$$
  h(\tau, t) = \sum_{i=1}^2 a_i(t)\,\delta\left(\tau - \tau_i(t)\right) 
$$ {#eq-h}
Su respuesta en frecuencia se consigue con la transformada de Fourier respecto a la variable $\tau$
$$
  H(f, t) = \sum_{i=1}^2 a_i(t)\,e^{-2\pi f \tau_i(t)}
$$ {#eq-H}

Consideramos el caso particular de canal inalámbrico variante en el tiempo presentado en la @fig-canal

![Canal inalámbrico de 2 caminos conformado por una antena emisora Tx estática, antena receptora Rx móvil con velocidad constante, y un reflector.](Images/Fig1.tex){#fig-canal}

Este canal es desarrollado en @tse_2 y resulta en
$$
a_1(t)=\frac{|\alpha|}{x_1(t)} \qquad\qquad a_2(t)=-\frac{|\alpha|}{x_2(t)}
$$ {#eq-a1}
$$
\tau_1(t)=\frac{x_1(t)}{c} \qquad\qquad \tau_2(t)=\frac{x_2(t)}{c}
$$ {#eq-a2}
En donde $x_1(t)$ y $x_2(t)$ son la distancia de cada camino, y el signo de $a_2$ contempla el salto de fase por reflexión
$$
  x_1(t) = r_0+vt \qquad x_2(t)=2d-r_0-vt
$$ {#eq-xi}

Al existir dos caminos se presentará interferencia en el canal, que se puede analizar expresando la diferencia de fase entre estos. La expresión resultará en interferencia constructiva cuando $\Delta\theta$ es un múltiplo par de $\pi$, y en interferencia destructiva cuando este es un múltiplo impar de $\pi$
$$
  \Delta\theta = 2\pi f \tau_2(t)+\pi-2\pi f \tau_1(t)
$$ {#eq-fase}
Desarrollando la expresión para el canal de la @fig-canal se llega al resultado
$$
  \Delta\theta = \frac{4\pi}{c} f \left(d-r\right)+\pi
$$ {#eq-fase2}

Vista la @eq-fase2 como función de $r$, se define la _longitud de coherencia_ $X_C$ como la distancia entre un máximo y un mínimo de interferencia.

Asimismo, vista como función de $f$, se define el _ancho de banda de coherencia_ $W_C$ de la misma forma.

## Implementación

Para simular el canal, se implementa la función genérica para un canal de dos caminos en el dominio del tiempo, @eq-h
```{julia}
#| output: false
h(t´,t) = ai[1](t).*dirac(t´.-ti[1](t)).+
          ai[2](t).*dirac(t´.-ti[2](t))
```
Así como en el dominio de la frecuencia, @eq-H
```{julia}
#| output: false
H(f,t) = ai[1](t)*exp(-im*2pi*f*ti[1](t))+ 
         ai[2](t)*exp(-im*2pi*f*ti[2](t))
```

Para simular el caso particular descrito en la @fig-canal, se especifican las expresiones de $a_i$ y $\tau_i$ de @eq-a1 y @eq-a2 como vectores de funciones
```{julia} 
#| output: false
ai = [t -> 1/xi[1](t), t -> -1/xi[2](t)]
ti = [t -> xi[1](t)/c, t ->  xi[2](t)/c]
```
Igualmente se especifican los $x_i$ descritos en la @eq-xi
```{julia}
#| output: false
r(t) = r0+v*t
xi   = [t -> r(t), t -> 2*d-r(t)]
```
## Simulación

La respuesta del canal se simulará en un ancho de banda de 10 MHz respecto a una frecuencia central $f_0$ de 1 GHz, discretizado en 2048 puntos.

```{julia}
#| output: false
f0 = 1e9; BW = 10e6; N = 2048
f  = f0.+range(-BW/2, BW/2, N)
dt = 1/(f[2]-f[1])
t´ = fftfreq(N, dt) |> fftshift
```

Se fija una distancia de la emisora al reflector de 1 km, y una posición inicial de la receptora de de 200 m. Se estudian posiciones de la antena receptora desde $r=r_0$ hasta $r=d-r_0$, tal como indica la @fig-rango.

![Intervalo de simulación del canal, se evalúan posiciones de la receptora $r(t) \in [r_0,\, d-r_0]$.](Images/Fig2.tex){#fig-rango}

Se considera una velocidad de la receptora de 60 km/h y se eligen tiempos $t$ tal que las posiciones de la receptora estén en el intervalo de evaluación. 
```{julia}
#| output: false
d = 1000; r0 = 200; v = 60*1000/3600
t = range(0, d-2r0, N)./v
```

Ya que $H(f,t)$ es una función de 2 dimensiones existen dos formas de realizar la simulación, que requieren fijar uno de los parámetros.

::: {#fig-analisis layout="[[1, 1]]" layout-valign="bottom"}
![Función $H(f, t_i)$ variando $t_i$.](Images/Fig4.tex){#fig-varT}

![Función $H(f_i, t)$ variando $f_i$.](Images/Fig3.tex){#fig-varF}

Distintas formas de simular e interpretar $H(f, t)$, visualizadas en el plano tiempo-frecuencia.
:::

Fijar $t_i$ retorna una respuesta en frecuencia del canal intsantántea $H(f, t_i)$, mientras que fijar $f_i$ retorna la evolución temporal de la transferencia del canal en esa frecuencia.

Mientras que $H(f,t)$ es la expresión general de un canal LTV, en la @fig-canal la distancia $r(t)$ caracteriza la respuesta del canal. Los resultados se presentan en función de la distancia.

## Resultados

Al realizar la simulación correspondiente a la @fig-varT, se obtienen las respuestas $H(f, r_i)$ presentadas en la @fig-respuesta. Se observa que el ancho de banda de coherencia incrementa cuando la antena receptora se acerca al reflector

```{julia}
#| echo: false
#| label: fig-respuesta
#| fig-cap: "Fila 1: $r$ = 200m. Fila 2: $r$ = 500m. Fila 3: $r$ = 800m."
H_abs(f, t) = H(f, t) |> abs
t1, t2, t3 = t[1], t[end/2 |> Int], t[end]
Hmax = maximum(H_abs.(f, t1))

params =(ylims=(0, 1), xlims=(0.995, 1.005), legend=false)
p1 = plot(f.*1e-9, H_abs.(f, t1)./Hmax, ylabel=L"|H(f, r_1)|", xformatter=(_->""); params...)
p2 = plot(f.*1e-9, H_abs.(f, t2)./Hmax, ylabel=L"|H(f, r_2)|", xformatter=(_->""); params...)
p3 = plot(f.*1e-9, H_abs.(f, t3)./Hmax, ylabel=L"|H(f, r_3)|", xlabel=L"$f\,$ [GHz]"; params...)

plot(p1, p2, p3, layout=(3,1), size=(480, 320))
```
Este análisis se puede relacionar con la respuesta al impulso instantánea del canal, $h(\tau, r_i)$, presentadas en la @fig-spread.
```{julia}
#| echo: false
#| label: fig-spread
#| fig-cap: "Fila 1: $r$ = 200m. Fila 2: $r$ = 500m. Fila 3: $r$ = 800m."
t1, t2, t3 = t[1], t[end/2 |> Int], t[end]
hmax = maximum(h(t´, t1))

params = (xlims=(0,8), ylims=(-0, 1), legend=false)

p1 = plot(t´.*1e6, h(t´, t1)./ hmax .|> abs, ylabel=L"$h(τ, r_1)$", xformatter=(_->""); params...)
p2 = plot(t´.*1e6, h(t´, t2)./ hmax .|> abs, ylabel=L"$h(τ, r_2)$", xformatter=(_->""); params...)
p3 = plot(t´.*1e6, h(t´, t3)./ hmax .|> abs, ylabel=L"$h(τ, r_3)$", xlabel=L"$\tau$ [ms]"; params...)

plot(p1, p2, p3, layout=(3,1), size=(480, 320))
```
La respuesta al impulso ilustra la diferencia en tiempo que tarda la señal en llegar al receptor por cada camino, característica que recibe el nombre de _delay spread_ del canal.

Comparar la @fig-spread con la @fig-respuesta ilustra que el delay spread es inversamente proporcional al ancho de banda de coherencia.

Interesa estudiar en más detalle la respuesta del canal, comparándola con la diferencia de fase. Para esto se implementa la @eq-fase, ajustada para que retorne $\Delta\theta\in[-\pi, \pi]$.
```{julia}
#| output: false
function dif_fase(f, t)
  return 2pi*mod(f*(ti[2](t)-ti[1](t)),1)-pi
end
```
Los resultados para $r=800\text{ m}$ se presentan en la @fig-wc
```{julia}
#| echo: false
#| label: fig-wc
#| fig-cap: "Mínimo $=a_1(r)-a_2(r)$, interferencia destructiva. Máximo $=a_1(r)+a_2(r)$, interferencia constructiva."
Hs = H.(f, t[end]) .|> abs
Hmax = (abs(ai[1](t[end]))+abs(ai[2](t[end])))/maximum(Hs)
Hmin = (abs(ai[1](t[end]))-abs(ai[2](t[end])))/maximum(Hs)
Hs = Hs/maximum(Hs)
flims = (0.998, 1.002)

p1 = plot(f.*1e-9, Hs, ylims=(0, 1.1), link=:x, label=false, legend=:outerright, ylabel=L"$|H(f,r_3)|$")
plot!(p1, f.*1e-9, f.*0 .+Hmax, linecolor=:black, linestyle=:dot, label=L"H_{Max}", link=:x, xlims=flims)
plot!(p1, f.*1e-9, f.*0 .+Hmin, linecolor=:black, linestyle=:dash, label=L"H_{Min}", link=:x, xlims=flims, xformatter=(_->""))

p2 = plot(f.*1e-9, dif_fase.(f, t[end]), xlims=flims, xlabel=L"$f\;$ [GHz]", link=:x, legend=false, ylabel=L"$\Delta\theta(f, r_3)$")
plot!(p2, [flims[1], flims[2]], [0, 0], linecolor=:gray, linestyle=:dash)
plot(p1, p2, layout=(2,1), size=(480,240))
```
La @fig-wc ilustra que la respuesta se acerca a máximos de interferencia en frecuencias tales que $\Delta\theta\simeq 0$, y a mínimos en frecuencias tales que $\Delta\theta\simeq\pm\pi$.

Para realizar correctamente el análisis correspondiende a la @fig-varF y obtener $H(f_i, r)$, hace falta reducir el rango del vector tiempo, al hacerlo se obtiene la @fig-respuestax

```{julia}
#| output: false
#| echo: false
t = range(d-2.01r0, d-2r0, N)./v
```
```{julia}
#| echo: false
#| label: fig-respuestax
#| fig-cap: "Fila 1: $f$ = 0.9 GHz. Fila 2: $f$ = 1.1 GHz."
f1, f2, f3 = (-100e6, 0, 100e6).+1e9
Hmax = maximum(H_abs.(f1, t))

params = (ylims=(0,1), legend=false)
p1 = plot(r.(t), H_abs.(f1, t)./Hmax, ylabel=L"|H(f_1, r)|", xformatter=(_->""); params...)
p3 = plot(r.(t), H_abs.(f3, t)./Hmax, ylabel=L"|H(f_3, r)|", xlabel="r [m]"; params...)

plot(p1, p3, layout=(2,1), size=(480,240))
```
Esto se debe a que la longitud de coherencia de este canal es del órden de los centímetros. Se observa que la distancia de coherencia disminuye al incrementar la frecuencia de transmisión. 

De la misma forma que con el análisis anterior, se compara la evolución de la transferencia del canal a determinada frecuencia con la diferencia de fase. Los resultados para $f = 1\text{ GHz}$ se presentan en la @fig-xc
```{julia}
#| echo: false
#| label: fig-xc
#| fig-cap: "Mínimo $=a_1(r)-a_2(r)$, interferencia destructiva. Máximo $=a_1(f)+a_2(f)$, interferencia constructiva."
t2 = range(d-2.005r0, d-2r0, N)./v

Hs = H_abs.(1e9, t2)
Hmax = (ai[1].(t2).-ai[2].(t2))./maximum(Hs)
Hmin = (ai[1].(t2).+ai[2].(t2))./maximum(Hs)
Hs = Hs./maximum(Hs)

p1 = plot(r.(t2), Hs, ylims=(0,1.1), link=:x, legend=:outerright, label=false, ylabel=L"|H(f_2, t)|")
plot!(p1, r.(t2), Hmax, linecolor=:black, linestyle=:dot, label=L"H_{Max}", link=:x)
plot!(p1, r.(t2), Hmin, linecolor=:black, linestyle=:dash, label=L"H_{Min}", link=:x, xformatter=(_->""))

p2 = plot(r.(t2), dif_fase.(1e9, t2), xlabel=L"$r$ [m]", link=:x, legend=:false, ylabel=L"\Delta\theta(f_2, t)")
plot!(p2, [r(t2[1]), r(t2[end])], [0, 0], linecolor=:gray, linestyle=:dash)

t2 = range(d-1.7r0, d-1.5r0, N)./v

plot(p1, p2, layout=(2,1), size=(480,240))
```
Nuevamente se observan máximos en distancias tales que $\Delta\theta\simeq 0$, y mínimos en distancias tales que $\Delta\theta\simeq\pm\pi$.

Finalmente se puede constatar que los resultados obtenidos por la simulación son consistentes con los resultados analíticos esperados, 
para esto se define una función que calcula empíricamente el período de una señal
```{julia}
#| echo: false
#| output: false
function argmaxima(x)
  idx = []
  for i in 2:length(x)-1
    x[i-1]<x[i] && x[i]>x[i+1] && push!(idx, i)
  end
  return idx 
end

t1 = range(0, d-2r0)./v
#| label: fig-xcdef
#| fig-cap: "Xc de f"
t2 = range(d-2.01r0, d-2r0, N)./v
f1 = f0.+range(-BW/2, BW/2, N)
f2 = f0.+range(-BW/2, BW/2, N).*20
```
```{julia}
#| output: false
T_emp(t, x) = t[argmaxima(x)] |> diff |> mean
```
Esta función se utiliza para medir el ancho de banda de coherencia empírico realizando un barrido en tiempo
```{julia}
#| output: false
#| echo: false
t = t1; f = f1;
```
```{julia}
#| output: false
Wc_emp = [T_emp(f,H_abs.(f,ti))/2 for ti in t]
```
Y para medir la distancia de coherencia empírica realizando un barrido en frecuencia
```{julia}
#| output: false
#| echo: false
t = t2; f = f2;
```
```{julia}
#| output: false
Tc_emp = [T_emp(t,H_abs.(fi,t))/2 for fi in f]
```

Estos resultados empíricos se compararán con los resultados analíticos provenientes de analizar la @eq-fase2
$$
  W_C = \frac{c}{4(d-r)} \qquad\qquad\qquad X_c = \frac{c}{4f}
$$
La expresiones analíticas se implementan y se procede a realizar la simulación
```{julia}
#| output: false
Wc(x) = c/(4*(d-x))

Xc(f) = c/(4*f)
```
Se comparan ambos resultados para el ancho de banda de coherencia, presentados en la @fig-wcder. Se observa que ambos resultados son perféctamente consistentes
```{julia}
#| echo: false
#| label: fig-wcder
#| fig-cap: "Comparación de resultados empíricos de ancho de banda de coherencia ante un barrido espacial contra la solución analítica esperada."

p1 = plot(legend=:topleft, size=(480,240))
plot!(r.(t1), Wc.(r.(t1)).*1e-3, xlabel=L"$r$ [m]", ylabel=L"$W_c$ [kHz]", linestyle=:dash, linewidth=3, label="Analítico")
plot!(p1, r.(t1), Wc_emp.*1e-3, linewidth=0.5, color=:black, label="Empírico")
```
De la misma forma se comparan los resultados para la longitud de coherencia, presentados en la figura @fig-xcdef, nuevamente observando que son consistentes
```{julia}
#| echo: false
#| label: fig-xcdef
#| fig-cap: "Comparación de resultados empíricos de distancia de coherencia ante un barrido en frecuencia contra la solución analítica esperada."

p1 = plot(legend=:topright, size=(480,240), legendcolumns=-1)
plot!(p1, f2.*1e-9, Xc.(f2).*1e3, xlabel=L"$f$ [Ghz]", ylabel=L"$X_c$ [mm]", linestyle=:dash, linewidth=3, label="Analítico")
plot!(p1, f2.*1e-9, Tc_emp.*v.*1e3, linewidth=0.5, color=:black, label="Empírico")
plot(p1)
```
La consistencia de los resultados empíricos respecto a la solución analítica conocida permiten verificar que las simulaciones fueron realizadas correctamente. 

## Conclusiones

En la simulación fue posible identificar el ancho de banda de coherencia, distancia de coherencia, y el _delay spread_ observando la transferencia del canal. Se visualizó además como estas características se ven afectadas por variaciones espaciales o en el dominio de la frecuencia. 

En análisis final verificó que los resultados de la simulación son los esperados, correspondientes a la solución analítica. 

Es útil verificar la simulación contra una solución analítica conocida, ya que hacerlo permite confiar en resultados de simulación para casos en los que la solución analítica no es fácil de encontrar. 

El estudio se realizó para un canal simple, pero el método implementado es capaz de simular cualquier modelo de canal de dos caminos siempre que se conozcan previamente las expresiones $a_i(t)$ y $\tau_i(t)$.

También sería fácil extender la implementación para simular canales con un número mayor de caminos y visualizar así respuestas más complejas.