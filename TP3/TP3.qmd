---
title: Fundamentos de Comunicaciones Inalámbricas - TP N°3
subtitle: Fundamentos de Comunicaciones Inalámbricas
author: Matías Roqueta
institute: Instituto Balseiro
lang: es
bibliography: Tex/TP1.bib
biblio-style: ieee
highlight-style: arrow
format: 
  pdf:
    fontfamily: libertinus
    pdf-engine: lualatex
    include-in-header: ../Tex/headers.tex
    include-before-body: Tex/tikzsetup.tex
    cite-method: biblatex
    classoption: twocolumn
    geometry:
      - top=20mm
      - bottom=20mm
      - left=12mm
      - right=12mm
    latex-auto-install: true
jupyter: julia-1.8 
---
```{julia}
#| echo: false
#| output: false
include("./Julia/Lib.jl")
using .Lib
using Statistics
using Plots, ColorSchemes
using LaTeXStrings
using MAT
using Distributions
using Base.Iterators
pyplot()
default(fontfamily="serif", legendfontsize=10, titlefontsize=12, palette=:seaborn_deep6)

h0 = matread("Data/canal.mat")["h0"]
c = 3e8
```
# Introducción

Se cuenta con los datos de un canal inalámbrico con _flat fading_, caracterizado por su respuesta al impulso $h_0$ definida sobre una región geográfica. Los datos del canal provistos están normalizados tal que $E\left[|h_0|^2\right]=1$.

```{julia}
#| echo: false
#| label: fig-fuerza
#| fig-cap: Mapa de fuerza del canal. 

#heatmap(abs.(h0).^2, xlabel="x [cm]", ylabel="y [cm]", title=L"|h_0|^2", size=(400,400), colorbar=false, c=:devon, aspect_ratio=:equal)
```

Sobre el canal se transmitirá una secuencia BPSK. 
$$
  y = h_0 x + w \qquad\qquad x = \pm 1
$${#eq-bpsk_tx}

El canal cuenta con ruido AWGN en fase y cuatratura, $w = w_I + j w_Q$, a determinada potencia de ruido $N_0$. 
$$ 
  w \sim \mathcal{CN}(0, N_0) \implies 
  w_I, w_Q \sim \mathcal N \left(0, \tfrac{N_0}{2}\right)
$${#eq-noise}

Con $w_I$ y $w_Q$ independientes.

Se considera que el receptor cuenta con conicimiento del estado del canal, permitiendo hacer recepción óptima por máxima verosimilitud. Se usa el estadístico suficiente definido según @@tse_31
$$
 r = \frac{h_0^\ast}{|h_0|}y = |h_0| x + \check{w} 
$${#eq-suf_statistic}

Al estar normalizado el canal, las propiedades estadísticas de $\check w$ son idénticas a las de $w$ definidas en la @eq-noise.

Finalmente la detección por máxima verosimilitudo se consigue aplicando la siguiente regla de decisión 
$$
  \hat x \leftarrow \mathcal R \left[r\right] \decide_{-1}^{1} 0
$${#eq-decision}

Utilizando estas funciones simulamos, por ejemplo, la transmisión de una secuencia de 50 símbolos, de forma representada en la @fig-transmit.

```{julia}
#| echo: false
#| label: fig-transmit
#| fig-cap: Ejemplo de la simulación de transisión-recepción de una secuencia de 50 símbolos BPSK, resaltando los errores de transmisión.

m_len = 50
h = 1
N0 = 5

t = 1:m_len
x = rand([-1,1], m_len)
r = Lib.tx.(x, h, N0)
y = Lib.rx.(r, h)
p1 = plot(t, x, line=:stem, marker=:square, framestyle=:origin, title="Secuencia Tx", yaxis=[], xaxis=[])
p2 = plot(t[y .== x], y[y .== x], line=:stem, marker=:square, framestyle=:origin, title="Secuencia Rx")
plot!(p2, t[y .!= x], y[y .!= x], line=:stem, marker=:square, color=:darkred, yaxis=[], xaxis=[])
plot(p1, p2, layout=(2,1), size=(400,200), legend=false)
```
Eligiendo secuencias de longitud suficiente se puede estimar la tasa de error de bits empíricamente para determinada respuesta al impulso y potencia de ruido 
$$
  \text{BER}_E \,\vert\, h_0 = \frac{\text{\# bits con error}}{\text{\# bits transmitidos}}\,\Bigg|_{h_0}
$${#eq-berE_h0}

Esto se promedia sobre múltiples realizaciones del canal inalámbrico
$$
  \text{BER}_E = \overline{\text{BER}_E \,\vert\, h_0}
$${#eq-berE}

```{julia}
#| echo: false
#| output: false

from_dB(x) = 10^(x/10)
to_dB(x) = 10*log10(x)

snrdb_cont = -10:0.1:40
snrdb_disc = -10:2:40
snr_cont = from_dB.(snrdb_cont)
snr_disc = from_dB.(snrdb_disc);
```

La tasa de error de bits empírica se evalúa para diferentes valores de relación señal-ruido. Esta se compara con la tasa de error de bits esperada para el canal.
$$
  \text{BER}_T = \frac{1}{2}\left(1-\sqrt{\frac{\text{SNR}}{1+\text{SNR}}}\right)
$${#eq-berT}

Los resultados de comparar la @eq-berE con la @eq-berT se observan en la @fig-ber1

```{julia}
#| echo: false
#| label: fig-ber1
#| fig-cap: Curva teórica y resultados de simulación de la tasa de error de bits para una transmisión BPSK simple. 

m_len = 2048
n_points = 2048
ber_E = Lib.BER_E(snr_disc, h0, n_points, m_len)
ber_T = Lib.BER_T.(snr_cont)

plot(snrdb_cont, nextfloat.(ber_T), label="Teórico", xlabel="SNR [dB]", ylabel="BER")
plot!(snrdb_disc, nextfloat.(ber_E), yaxis=(:log, [1e-5, 1]), label="Simulado", line=false, marker=:square)
```

# Diversidad Temporal

A continuación se estudiaría el comportamiento del canal al tener un receptor móvil, lo cual implica variación temporal de la respuesta al impulso. Esto requirere el uso de una codificación que aproveche la diversidad. Se usará código de repetición con longitud $L$. 

A su vez, para maximizar la diversidad se aplicará entrelazado de datos de longitud $L$. Los datos se organizan en bloques de $L$ símbolos y se expresan de la siguiente forma. 

- $\mathbf{x}$: Vector de símbolos a transmitir, de longitud $L$.
- $\mathbf{\bar x}$: Vector codificado, de longitud $L^2$.
- $\mathbf{\check x}$: Vector codificado y entrelazado, de longitud $L^2$.

Usando como ejemplo $L=3$ se aplica la implementación de la preparación de un bloque de símbolos para la tramsisión de la siguiente forma. 

``` {julia}
#| output: false
x_o = [:x1, :x2, :x3]
x_r = Lib.repetition(x_o, 3)
x_i = Lib.interleave(x_r, 3)
```
Y se observan los vectores de símbolos resultantes
``` {julia}
#| echo: false
println("x_o: $x_o")
println("x_r: $x_r")
println("x_i: $x_i")
```

## Interpretación Matricial

El operador entrelazado se puede interpretar como una transformación lineal definida por la matrix $\mathbf E_{L^2\times L^2}$
$$
  \mathbf{\check x} = \mathbf{E \bar x} \qquad
  \mathbf E = 
  \begin{bmatrix}
    \mathbf J & \mathbf 0 & \cdots & \mathbf 0\\
    \mathbf 0 & \mathbf J & & \mathbf 0\\
    \vdots &  & \ddots & \vdots\\
    \mathbf 0 & \mathbf 0 & \cdots & \mathbf J\\
  \end{bmatrix}
  \qquad
  \mathbf J =
  \begin{bmatrix}
    0 & \cdots & 0 & 1\\
    0 &  & 1 & 0\\
    \vdots & \udots &  & \vdots \\
    1 & \cdots & 0 & 0
  \end{bmatrix}
$${#eq-preparex}

En donde $\mathbf 0 _{L \times L}$ es la matriz nula y $\mathbf J_{L\times L}$ es la matriz anti-diagonal unitaria. Se puede demostrar que la matriz $\mathbf E$ definida en la @eq-preparex cumple ciertas propiedades. En particular interesa que es una matriz simétrica, y que es ortogonal, lo cual implica que es su propia inversa. 


Al llamar $\mathbf{\check y}$ al resultado de transimitir el vector $\mathbf{\check x}$ a través de un canal con respuesta al impulso $\mathbf h$, se puede interpretar la transmisión de la siguiente forma. 
$$
  \mathbf{\check y} = \mathbf{H\check x} + \mathbf w \implies \mathbf{E \check y} = \mathbf{E H E \bar x} + \mathbf{E w} 
$${#eq-interleave_transmit}

Se puede verificar que siendo $\mathbf H$ la matriz diagonal definida por $\mathbf h$, entonces
$$
\mathbf H = \diag(\mathbf h) \implies \mathbf{EHE} = \diag(\mathbf{Eh})
$$ 

A lo que podemos llamar $\mathbf{\check H}$, de la misma forma llamando a $\mathbf{\check y} = \mathbf{H\bar y}$ la @eq-interleave_transmit queda
$$
\mathbf{\bar y} = \mathbf{\check H \bar x} + \mathbf{\check w}
\qquad\qquad
\mathbf{\bar y} = \begin{bmatrix}
  \mathbf{\bar y_1}\\
  \vdots \\
  \mathbf{\bar y_L}
\end{bmatrix}
$$

En donde los vectores $\mathbf{\bar y_\ell}$ corresponden a cada $x_\ell$ codificado. El estadístico suficiente decodifica los correspondientes vectores reduciéndolos nuevamente a un escalar. 
$$
  r_\ell = \frac{\mathbf{\check h^*_\ell}}{\Vert \mathbf{\check h_\ell} \Vert} \mathbf{\bar y_\ell} = \Vert \mathbf{\check h_\ell} \Vert x_\ell + \frac{\mathbf{\check h^*_\ell}}{\Vert \mathbf{\check h_\ell} \Vert} \mathbf{\check w}
$${#eq-suf_statistic_v}

La detección por máxima verosimilitud se realiza con la misma regla de decisión definida en la @eq-decision aplicada sobre el estadístico suficiente definido en la @eq-suf_statistic_v.

El canal entonces de principio a fin se puede interpretar de la forma expresada en la @fig-fullchannel

![Transimisón-Recepción con diversidad temporal: Codificación, entrelazado, canal físico, desentrelazado, y decodificación.](Images/Fig1.tex){#fig-fullchannel}

Incorporando los bloques de entrelazado al canal, la @fig-fullchannel se puede reducir a la @fig-reducedchannel, efectivamente se transmiten los bloques de datos por un canal lógico, que cuenta con la respuesta al impulso del canal físico pero entrelazada.

![Transmisión-Recepción con diversidad temporal: Codificación, canal entrelazado, y decodificación.](Images/Fig2.tex){#fig-reducedchannel}

La tasa de error teórica, también definida por @tse_32 estará dada por la siguiente expresión
$$
  \text{BER}_T = \left(\frac{1-\mu}{2}\right)^L\sum_{\ell=0}^{L-1} {L-1+\ell \choose \ell} \left(\frac{1+\mu}{2}\right)^\ell \quad   \mu = \sqrt{\frac{\text{SNR}}{1+\text{SNR}}}
$${#eq-berT_vec}

```{julia}
#| echo: false
#| label: fig-transmit_rep
#| fig-cap: Ejemplo de la simulación de transisión-recepción de una secuencia de 50 símbolos BPSK, resaltando los errores de transmisión.

#m_len = 18
#m_len2 = 3*18
#h = 1
#N0 = 5
#
#t = 1:m_len
#x_o = rand([-1,1], m_len)
#x_r = Lib.repetition(x_o, 3)
#x_i = Lib.interleave(x_r, 3)
#
#
#r = Lib.tx.(x, h, N0)
#y = Lib.rx.(r, h)
#p1 = plot(t, x, line=:stem, marker=:square, framestyle=:origin, title="Secuencia Tx", yaxis=[], xaxis=[])
#p2 = plot(t[y .== x], y[y .== x], line=:stem, marker=:square, framestyle=:origin, title="Secuencia Rx")
#plot!(p2, t[y .!= x], y[y .!= x], line=:stem, marker=:square, color=:darkred, yaxis=[], xaxis=[])
#plot(p1, p2, layout=(2,1), size=(400,200), legend=false)
```

En una primera instancia, se compara el efecto de aplicar un código de repetición, se utiliza una velocidad de receptor que asegure _full diversity_ y se compara $L = 1$ (sin repetición) contra $L=2$ y $L=3$.

```{julia}
#| echo: false
#| label: fig-berL
#| fig-cap: Comparación de efecto de aplicar código de repetición de diferentes tasas y sus respectivas curvas teóricas.

default(fontfamily="serif", legendfontsize=10, titlefontsize=12, palette=palette(:seaborn_deep6)[1:3])

ber_TL2 = Lib.BER_T.(snr_cont, 2)
ber_TL3 = Lib.BER_T.(snr_cont, 3)

ber_EL2 = Lib.BER_E(snr_disc, h0, n_points, m_len, 2, 3)
ber_EL3 = Lib.BER_E(snr_disc, h0, n_points, m_len, 3, 3)

plot(snrdb_disc,  nextfloat.(ber_E), yaxis=(:log, [1e-8, 1]), label="L = 1", line=false, marker=:square)
plot!(snrdb_disc, nextfloat.(ber_EL2), yaxis=(:log, [1e-8, 1]), label="L = 2", line=false, marker=:square)
plot!(snrdb_disc, nextfloat.(ber_EL3), yaxis=(:log, [1e-8, 1]), label="L = 3", line=false, marker=:square)

plot!(snrdb_cont, nextfloat.(ber_T),   label=false, yaxis=(:log, [1e-8, 1]), xlabel="SNR [dB]", ylabel="BER")
plot!(snrdb_cont, nextfloat.(ber_TL2), label=false, yaxis=(:log, [1e-8, 1]), xlabel="SNR [dB]", ylabel="BER")
plot!(snrdb_cont, nextfloat.(ber_TL3), label=false, yaxis=(:log, [1e-8, 1]), xlabel="SNR [dB]", ylabel="BER")
```
Se compara también el efecto del grado de diversidad, se utiliza para un código $L=3$ un receptor estático, $v_1=0$, un receptor a una velocidad $v_3$ que asegure _full diversity_, y una velocidad intermedia $v_2<v_3$.
```{julia}
#| echo: false
#| label: fig-ber_v
#| fig-cap: Comparación de efecto de aplicar código de repetición $L = 3$ a diferentes velocidades contra la curva teórica esperada.

default(fontfamily="serif", legendfontsize=10, titlefontsize=12, palette=palette(:seaborn_deep6)[1:3])

ber_Ev0 = Lib.BER_E(snr_disc, h0, n_points, m_len, 3, 0)
ber_Ev1 = Lib.BER_E(snr_disc, h0, n_points, m_len, 3, 1)

plot(snrdb_disc,  nextfloat.(ber_Ev0), yaxis=(:log, [1e-8, 1]), label=L"v_1", line=false, marker=:square)
plot!(snrdb_disc, nextfloat.(ber_Ev1), yaxis=(:log, [1e-8, 1]), label=L"v_2", line=false, marker=:square)
plot!(snrdb_disc, nextfloat.(ber_EL3), yaxis=(:log, [1e-8, 1]), label=L"v_3", line=false, marker=:square)

plot!(snrdb_cont, nextfloat.(ber_TL3), label=false, yaxis=(:log, [1e-8, 1]), xlabel="SNR [dB]", ylabel="BER", color=palette(:seaborn_deep6)[3])
```

Se observa que existe una ganancia de diversidad apreciable por aplicar código de repetición, incluso a $L$ baja. Sin embargo, los resultados presentados en la @fig-ber_v muestran que es necesario asegurar que exista _full diversity_ para que la ganancia por diversidad teórica sea realizada. 